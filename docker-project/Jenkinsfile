pipeline {
    agent any

    triggers {
        // Verifica o repositório Git a cada 5 minutos
        pollSCM('H/5 * * * *')
    }

    stages {
        stage('Git Checkout') {
            steps {
                script {
                    echo "=== Iniciando o checkout do repositório Git ==="
                    checkout scm
                    echo "=== Checkout do Git concluído ==="
                }
            }
        }

        stage('Clean Docker Environment') {
            steps {
                script {
                    echo "=== Limpando o ambiente Docker ==="
                    sh 'docker-compose -f docker-project/docker-compose.yml down -v || true'
                    echo "=== Ambiente Docker limpo ==="
                }
            }
        }

        stage('Build Containers') {
            steps {
                script {
                    echo "=== Iniciando a construção dos containers ==="
                    sh 'docker-compose -f docker-project/docker-compose.yml build'
                    echo "=== Containers construídos com sucesso ==="
                }
            }
        }

        stage('Run Containers') {
            steps {
                script {
                    echo "=== Iniciando os containers ==="
                    sh 'docker-compose -f docker-project/docker-compose.yml up -d'
                    echo "=== Containers iniciados ==="
                }
            }
        }

        stage('Application Logs') {
            steps {
                script {
                    echo "=== Aguardando 10 segundos para estabilizar o ambiente ==="
                    sleep 10
                    echo "=== Logs do Flask Application ==="
                    sh 'docker logs flask_app_container || true'

                    echo "=== Logs do MariaDB Container ==="
                    sh 'docker logs mariadb_container || true'
                }
            }
        }

        stage('Prometheus & Grafana Status') {
            steps {
                script {
                    echo "=== Verificando o status dos containers Prometheus e Grafana ==="
                    sh 'docker logs prometheus_container || true'
                    sh 'docker logs grafana_container || true'
                }
            }
        }

        stage('Check Application Status') {
            steps {
                script {
                    echo "Verificando se a aplicação está acessível..."
                    echo "Aplicação Flask disponível em http://localhost:5000"
                    echo "Aplicação Flask disponível em http://localhost:5000/login"
                    echo "Aplicação Flask disponível em http://localhost:5000/alunos"
                }
            }
        }
    }

    post {
        always {
            echo "=== Finalizando o pipeline e limpando contêineres ==="
            sh 'docker-compose -f docker-project/docker-compose.yml down -v || true'
        }
        failure {
            echo "Pipeline falhou. Verifique os logs para mais detalhes."
        }
    }
}
